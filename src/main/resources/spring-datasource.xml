<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd

        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <context:component-scan base-package="cn.cloudwalk" />
    <context:property-placeholder location="jdbc.properties"/>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.cloudwalk.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="shardingDataSource"/>
        <property name="mapperLocations" value="classpath*:mapper/*Mapper.xml"/>
    </bean>

    <bean id="ds_0" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc-driver}"/>
        <property name="url" value="${jdbc-url-0}"/>
        <property name="username" value="${jdbc-username-0}"/>
        <property name="password" value="${jdbc-password-0}"/>
    </bean>

    <!--数据源1-->
    <bean id="ds_1" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc-driver}"/>
        <property name="url" value="${jdbc-url-1}"/>
        <property name="username" value="${jdbc-username-1}"/>
        <property name="password" value="${jdbc-password-1}"/>
    </bean>
    <!-- 配置好dataSourceRulue,即对数据源进行管理 -->
    <bean id="dataSourceRule" class="com.dangdang.ddframe.rdb.sharding.api.rule.DataSourceRule">
        <constructor-arg>
            <map>
                <entry key="sharding_0" value-ref="ds_0"/>
                <entry key="sharding_1" value-ref="ds_1"/>
            </map>
        </constructor-arg>
    </bean>

    <!-- 对t_user表的配置，进行分库配置，逻辑表名为t_user，每个库有实际的三张表 -->
    <bean id="userTableRule" class="com.dangdang.ddframe.rdb.sharding.api.rule.TableRule">
        <constructor-arg value="t_user" index="0"/>
        <constructor-arg index="1">
            <list>
                <value>t_user_00</value>
                <value>t_user_01</value>
            </list>
        </constructor-arg>
        <constructor-arg index="2" ref="dataSourceRule"/>
        <constructor-arg index="3" ref="userDatabaseShardingStrategy"/>
        <constructor-arg index="4" ref="userTableShardingStrategy"/>
    </bean>

    <!-- t_user分库策略 -->
    <bean id="userDatabaseShardingStrategy" class="com.dangdang.ddframe.rdb.sharding.api.strategy.database.DatabaseShardingStrategy">
        <constructor-arg index="0" value="user_id"/>
        <constructor-arg index="1">
            <bean class="cn.cloudwalk.util.UserSingleKeyDatabaseShardingAlgorithm" />
        </constructor-arg>
    </bean>

    <!-- t_user 分表策略 -->
    <bean id="userTableShardingStrategy" class="com.dangdang.ddframe.rdb.sharding.api.strategy.table.TableShardingStrategy">
        <constructor-arg index="0" value="user_id"/>
        <constructor-arg index="1">
            <bean class="cn.cloudwalk.util.UserSingleKeyTableShardingAlgorithm" />
        </constructor-arg>
    </bean>



    <!-- 对t_student表的配置，进行分库配置，逻辑表名为t_student，每个库有实际的三张表 -->
    <!--<bean id="studentTableRule" class="com.dangdang.ddframe.rdb.sharding.api.rule.TableRule">-->
        <!--<constructor-arg value="t_student" index="0"/>-->
        <!--<constructor-arg index="1">-->
            <!--<list>-->
                <!--<value>t_student_00</value>-->
                <!--<value>t_student_01</value>-->
            <!--</list>-->
        <!--</constructor-arg>-->
        <!--<constructor-arg index="2" ref="dataSourceRule"/>-->
        <!--<constructor-arg index="3" ref="studentDatabaseShardingStrategy"/>-->
        <!--<constructor-arg index="4" ref="studentTableShardingStrategy"/>-->
    <!--</bean>-->

    <bean id="studentTableRule" class="com.dangdang.ddframe.rdb.sharding.api.rule.TableRule">
        <constructor-arg value="t_student" index="0"/>
        <constructor-arg index="1">
            <list>
                <value>t_student_00</value>
                <value>t_student_01</value>
            </list>
        </constructor-arg>
        <constructor-arg index="2" ref="dataSourceRule"/>
        <constructor-arg index="3" ref="userDatabaseShardingStrategy"/>
        <constructor-arg index="4" ref="userTableShardingStrategy"/>
    </bean>
    
    
    <bean id="studentBindTableRule" class="com.dangdang.ddframe.rdb.sharding.api.rule.BindingTableRule">

        <constructor-arg>
            <list>
                <ref bean="studentTableRule"/>
                <ref bean="userTableRule"/>
            </list>
        </constructor-arg>
    </bean>
    

    <!-- t_student分库策略 -->
    <bean id="studentDatabaseShardingStrategy" class="com.dangdang.ddframe.rdb.sharding.api.strategy.database.DatabaseShardingStrategy">
        <constructor-arg index="0" value="student_id"/>
        <constructor-arg index="1">
            <bean class="cn.cloudwalk.util.StudentSingleKeyDatabaseShardingAlgorithm" />
        </constructor-arg>
    </bean>

    <!-- t_student 分表策略 -->
    <bean id="studentTableShardingStrategy" class="com.dangdang.ddframe.rdb.sharding.api.strategy.table.TableShardingStrategy">
        <constructor-arg index="0" value="student_id"/>
        <constructor-arg index="1">
            <bean class="cn.cloudwalk.util.StudentSingleKeyTableShardingAlgorithm" />
        </constructor-arg>
    </bean>


    <!-- 构成分库分表的规则 传入数据源集合和每个表的分库分表的具体规则 -->
    <bean id="shardingRule" class="com.dangdang.ddframe.rdb.sharding.api.rule.ShardingRule">
        <constructor-arg index="0" ref="dataSourceRule"/>
        <constructor-arg index="1">
            <list>
                <ref bean="userTableRule"/>
                <ref bean="studentTableRule"/>
            </list>
        </constructor-arg>
        <constructor-arg index="2">
            <list>
                <ref bean="studentBindTableRule"/>
            </list>
        </constructor-arg>
    </bean>

    <!-- 对datasource进行封装 -->
    <bean id="shardingDataSource" class="com.dangdang.ddframe.rdb.sharding.api.ShardingDataSource">
        <constructor-arg ref="shardingRule"/>
    </bean>

    <!-- 事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="shardingDataSource" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>
